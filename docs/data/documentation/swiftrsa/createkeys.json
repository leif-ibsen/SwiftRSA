{"identifier":{"url":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/CreateKeys","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftrsa\/createkeys"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftRSA\/documentation\/SwiftRSA"]]},"kind":"article","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Usage","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/LoadKeys","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/EncryptDecrypt","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/SignVerify","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Performance","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Dependencies","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/References"],"generated":true}],"metadata":{"title":"Create New Keys","modules":[{"name":"SwiftRSA"}],"role":"article","roleHeading":"Article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"","anchor":""},{"type":"heading","level":3,"anchor":"Examples","text":"Examples"},{"type":"codeListing","syntax":"Swift","code":["import SwiftRSA","","\/\/ Create a key pair with modulus size = 1024","let (pub, priv) = try RSA.makeKeyPair(size: 1024)","","\/\/ See how they look","print(\"Public key:\\n\", pub)","print(\"Private key:\\n\", priv)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving (for example):"}]},{"type":"codeListing","syntax":"Swift","code":["Public key:","Sequence (2):","  Integer: 171253358237812531671778910624713724058916648254805696277279774146503716688113510841057236726755533384743409719012119447781138414317468691456917735176042152173382242053068370738005935216279881871488344731080784281146190232418555981064369930781879551372593036334341729194518790122071801919058147859115900850441","  Integer: 45311321411696445825758713514676800248927665812742086443844065810113678792743","","Private key:","Sequence (9):","  Integer: 0","  Integer: 171253358237812531671778910624713724058916648254805696277279774146503716688113510841057236726755533384743409719012119447781138414317468691456917735176042152173382242053068370738005935216279881871488344731080784281146190232418555981064369930781879551372593036334341729194518790122071801919058147859115900850441","  Integer: 45311321411696445825758713514676800248927665812742086443844065810113678792743","  Integer: 584695061280334016906908582419653869380474078462173506738265501519501807337419197389310001820843363649265684565134095755443035443572908578697954503542313719653951674050695673647828817775060767181459531509458245816258177215950118920617118959314262759859870646339925135538785360703650071658070547310998336087","  Integer: 13382612000117999406264765156316869739086652743488450283117761360640268801755476473270251381994460365909400768576949457133210019867100857313588031451635521","  Integer: 12796706520095070222484462918957688688260002489347815503585927463183625906819602183307134888748685244974961739569812103528780720142075297904074163677464521","  Integer: 3256729208544643586075150908736087624897696310038023726909145466312725336259084877122515712589308623098101968585821256747176406251351820477719963859799767","  Integer: 7732534577876946504156126672827506880957981003868732483928416580372661389002341713910146649563936890820657617991361377865685231544791408634777316311012247","  Integer: 3299395382464010595538552288154453932905662599177683521047146515809523344524954262674400675308399914440853556893038003678152677499414143886031791208546986"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also select the public exponent (or just its bitwidth) yourself, for example:"}]},{"syntax":"Swift","code":["import SwiftRSA","","\/\/ Create a key pair with modulus size = 1024 and public exponent = 65537","let (pub1, priv1) = try RSA.makeKeyPair(size: 1024, exponent: RSA.F4)","print(\"Public key:\\n\", pub1)","","let (pub2, priv2) = try RSA.makeKeyPair(size: 1024, expWidth: 64)","print(\"Public key:\\n\", pub2)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving (for example):"}]},{"syntax":"Swift","code":["Public key:","Sequence (2):","  Integer: 118217206281438996054350875379567272643429914192458791394168929525033119986632003283395725902703772222929316561999466677326228880096771212401935014984271018664203284482282601786181002951413476203535828444866890005928775097789137634063179078567570953445296843860534263231944202911717794595174581658856633355489","  Integer: 65537","","Public key:","Sequence (2):","  Integer: 107383747993388326460446664943087700230530763206145703774639190587970283322955235484613757107207309354545141041024709180273745428041160942928104129460424440464601559030194258787184038794097843929647759627722723588961272902877216412648664998474628650312418525039256248997901688915915828531557590622750926377141","  Integer: 13509433118470797337"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Given only a private key - say ‘privKey’ - you can easily create the corresponding public key, for example:","type":"text"}]},{"type":"codeListing","syntax":"Swift","code":["let pubKey = privKey.publicKey"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftRSA/documentation/SwiftRSA/Performance":{"title":"Performance","role":"article","abstract":[],"kind":"article","url":"\/documentation\/swiftrsa\/performance","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Performance","type":"topic"},"doc://SwiftRSA/documentation/SwiftRSA/LoadKeys":{"kind":"article","type":"topic","url":"\/documentation\/swiftrsa\/loadkeys","role":"article","title":"Load Existing Keys","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/LoadKeys","abstract":[]},"doc://SwiftRSA/documentation/SwiftRSA/Dependencies":{"identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Dependencies","abstract":[],"url":"\/documentation\/swiftrsa\/dependencies","role":"article","kind":"article","title":"Dependencies","type":"topic"},"doc://SwiftRSA/documentation/SwiftRSA/EncryptDecrypt":{"type":"topic","abstract":[],"url":"\/documentation\/swiftrsa\/encryptdecrypt","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/EncryptDecrypt","title":"Encrypt and Decrypt","kind":"article","role":"article"},"doc://SwiftRSA/documentation/SwiftRSA":{"abstract":[],"kind":"symbol","title":"SwiftRSA","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA","type":"topic","url":"\/documentation\/swiftrsa","role":"collection"},"doc://SwiftRSA/documentation/SwiftRSA/References":{"title":"References","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/References","kind":"article","url":"\/documentation\/swiftrsa\/references","abstract":[],"type":"topic","role":"article"},"doc://SwiftRSA/documentation/SwiftRSA/Usage":{"role":"article","url":"\/documentation\/swiftrsa\/usage","title":"Usage","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Usage","kind":"article"},"doc://SwiftRSA/documentation/SwiftRSA/SignVerify":{"title":"Sign and Verify","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/SignVerify","abstract":[],"url":"\/documentation\/swiftrsa\/signverify","kind":"article","type":"topic","role":"article"}}}