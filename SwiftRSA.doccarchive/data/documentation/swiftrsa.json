{"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSA","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSAPrivateKey","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSAPublicKey"]},{"identifiers":["doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Byte","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Bytes"],"title":"Type Aliases"},{"title":"Additional Information","identifiers":["doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/KeyManagement","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Performance","doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftrsa"]}],"metadata":{"role":"collection","externalID":"SwiftRSA","title":"SwiftRSA","symbolKind":"module","modules":[{"name":"SwiftRSA"}],"roleHeading":"Framework"},"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"RSA Public-Key Cryptography"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"SwiftRSA provides RSA cryptography in Swift. This encompasses:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"RSA key pair creation"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Loading existing keys from their PEM and DER encodings"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Encryption and decryption using either the PKCS1 scheme or the OAEP scheme","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Signing and verifying using either the PKCS1- or the PSS signature scheme","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Encrypt and Decrypt","level":3,"anchor":"Encrypt-and-Decrypt","type":"heading"},{"inlineContent":[{"type":"text","text":"You need a public key - say "},{"code":"pubKey","type":"codeVoice"},{"text":" - to encrypt a message and the corresponding private key - say ","type":"text"},{"type":"codeVoice","code":"privKey"},{"type":"text","text":" - to decrypt it."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"PKCS1 Example","type":"text"}]}]},{"syntax":"swift","type":"codeListing","code":["let pkcs1Cipher = try pubKey.encryptPKCS1(message: [1, 2, 3])","let clearText = try privKey.decryptPKCS1(cipher: pkcs1Cipher)"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"OAEP Example","type":"text"}]}]},{"syntax":"swift","code":["let oaepCipher = try pubKey.encryptOAEP(message: [1, 2, 3], kind: .SHA3_256, label: [4, 5, 6])","let clearText = try privKey.decryptOAEP(cipher: oaepCipher, kind: .SHA3_256, label: [4, 5, 6])"],"type":"codeListing"},{"type":"heading","anchor":"Sign-and-Verify","text":"Sign and Verify","level":3},{"inlineContent":[{"type":"text","text":"You need a private key - say "},{"code":"privKey","type":"codeVoice"},{"type":"text","text":" - to sign a message and the corresponding public key - say "},{"code":"pubKey","type":"codeVoice"},{"text":" - to verify the signature.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"PKCS1 Example"}],"type":"strong"}]},{"syntax":"swift","type":"codeListing","code":["let pkcs1Signature = try privKey.signPKCS1(message: [1, 2, 3], kind: .SHA3_256)","let ok = pubKey.verifyPKCS1(signature: pkcs1Signature, message: [1, 2, 3], kind: .SHA3_256)"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"PSS Example","type":"text"}]}]},{"type":"codeListing","syntax":"swift","code":["let pssSignature = try privKey.signPSS(message: [1, 2, 3], kind: .SHA3_256)","let ok = pubKey.verifyPSS(signature: pssSignature, message: [1, 2, 3], kind: .SHA3_256)"]},{"level":3,"text":"Usage","type":"heading","anchor":"Usage"},{"inlineContent":[{"text":"To use SwiftRSA, in your project ","type":"text"},{"inlineContent":[{"text":"Package.swift","type":"text"}],"type":"emphasis"},{"text":" file add a dependency like","type":"text"}],"type":"paragraph"},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftRSA\", from: \"2.5.0\"),","]"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"SwiftRSA itself depends on the ASN1, BigInt and Digest packages","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.6.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.19.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.7.0\"),","],"]},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"text":"SwiftRSA requires Swift 5.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"}],"type":"aside","style":"important","name":"Important"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA","interfaceLanguage":"swift"},"references":{"doc://SwiftRSA/documentation/SwiftRSA":{"type":"topic","title":"SwiftRSA","url":"\/documentation\/swiftrsa","role":"collection","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA","kind":"symbol","abstract":[{"text":"RSA Public-Key Cryptography","type":"text"}]},"doc://SwiftRSA/documentation/SwiftRSA/References":{"title":"References","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/References","type":"topic","abstract":[{"type":"text","text":"SwiftRSA is implemented in accordance with algorithms in the following papers"}],"role":"article","url":"\/documentation\/swiftrsa\/references","kind":"article"},"doc://SwiftRSA/documentation/SwiftRSA/Byte":{"role":"symbol","navigatorTitle":[{"text":"Byte","kind":"identifier"}],"kind":"symbol","title":"Byte","abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"url":"\/documentation\/swiftrsa\/byte","type":"topic","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Byte","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Byte"}]},"doc://SwiftRSA/documentation/SwiftRSA/Bytes":{"role":"symbol","title":"Bytes","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bytes"}],"identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Bytes","url":"\/documentation\/swiftrsa\/bytes","navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"kind":"symbol"},"doc://SwiftRSA/documentation/SwiftRSA/Performance":{"kind":"article","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/Performance","abstract":[{"text":"Execution times for certain SwiftRSA operations","type":"text"}],"role":"article","title":"Performance","url":"\/documentation\/swiftrsa\/performance","type":"topic"},"doc://SwiftRSA/documentation/SwiftRSA/RSA":{"abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RSA"}],"title":"RSA","navigatorTitle":[{"text":"RSA","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftrsa\/rsa","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSA"},"doc://SwiftRSA/documentation/SwiftRSA/RSAPublicKey":{"role":"symbol","title":"RSAPublicKey","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RSAPublicKey","kind":"identifier"}],"identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSAPublicKey","url":"\/documentation\/swiftrsa\/rsapublickey","navigatorTitle":[{"text":"RSAPublicKey","kind":"identifier"}],"abstract":[{"type":"text","text":"The public key"}],"kind":"symbol"},"doc://SwiftRSA/documentation/SwiftRSA/KeyManagement":{"kind":"article","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/KeyManagement","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"role":"article","title":"Key Management","url":"\/documentation\/swiftrsa\/keymanagement","type":"topic"},"doc://SwiftRSA/documentation/SwiftRSA/RSAPrivateKey":{"type":"topic","title":"RSAPrivateKey","navigatorTitle":[{"text":"RSAPrivateKey","kind":"identifier"}],"url":"\/documentation\/swiftrsa\/rsaprivatekey","role":"symbol","identifier":"doc:\/\/SwiftRSA\/documentation\/SwiftRSA\/RSAPrivateKey","kind":"symbol","abstract":[{"type":"text","text":"The private key"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RSAPrivateKey","kind":"identifier"}]}}}